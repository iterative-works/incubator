package works.iterative.incubator.categorization.domain.model

import java.time.Instant

/** Represents a rule for cleaning up payee names in transactions
  *
  * A PayeeCleanupRule defines a pattern to match against raw transaction payee data and a
  * replacement string to use for cleaning up the payee name. Rules can be generated by LLMs or
  * created by humans, and they accumulate performance metrics through a feedback system.
  *
  * Classification: Domain Entity
  */
case class PayeeCleanupRule(
    // Core properties
    id: String, // Unique identifier for the rule
    pattern: String, // Pattern to match against raw payee names
    patternType: PatternType, // Type of pattern (exact, contains, regex)
    replacement: String, // The cleaned payee name to use

    // Metadata
    confidence: Double, // Confidence score (0.0 to 1.0)
    generatedBy: GeneratorType, // How this rule was generated
    status: RuleStatus, // Current status (pending, approved, rejected)

    // Performance metrics
    usageCount: Int, // How many times rule has been applied
    successRate: Double, // Success rate based on feedback (0.0 to 1.0)

    // Audit trail
    createdAt: Instant, // When this rule was created
    updatedAt: Option[Instant] // When this rule was last updated
)

/** Types of patterns supported by cleanup rules */
enum PatternType:
    case Exact // Exact string match
    case Contains // String contains pattern
    case StartsWith // String starts with pattern
    case Regex // Regular expression pattern
end PatternType

/** Who/what generated this rule */
enum GeneratorType:
    case LLM // Generated by LLM
    case Human // Created by human user

/** Current status of a rule in the approval workflow */
enum RuleStatus:
    case Pending // Newly created, awaiting review
    case Approved // Reviewed and approved
    case Rejected // Reviewed and rejected

object PayeeCleanupRule:
    /** Create a new LLM-generated rule pending approval */
    def newFromLLM(
        pattern: String,
        patternType: PatternType,
        replacement: String,
        confidence: Double
    ): PayeeCleanupRule =
        PayeeCleanupRule(
            id = java.util.UUID.randomUUID().toString,
            pattern = pattern,
            patternType = patternType,
            replacement = replacement,
            confidence = confidence,
            generatedBy = GeneratorType.LLM,
            status = RuleStatus.Pending,
            usageCount = 0,
            successRate = 1.0, // Start optimistic
            createdAt = Instant.now(),
            updatedAt = None
        )

    /** Create a new human-created rule (auto-approved) */
    def newFromHuman(
        pattern: String,
        patternType: PatternType,
        replacement: String
    ): PayeeCleanupRule =
        PayeeCleanupRule(
            id = java.util.UUID.randomUUID().toString,
            pattern = pattern,
            patternType = patternType,
            replacement = replacement,
            confidence = 1.0, // Human rules start with full confidence
            generatedBy = GeneratorType.Human,
            status = RuleStatus.Approved, // Auto-approve human rules
            usageCount = 0,
            successRate = 1.0,
            createdAt = Instant.now(),
            updatedAt = None
        )
end PayeeCleanupRule
