package works.iterative.incubator.transactions.domain.model

import java.time.Instant
import works.iterative.core.service.Create

/** Represents a bank account from which transactions are imported
  *
  * This entity serves as a reference/lookup entity for bank accounts
  * as well as storing configuration for accessing bank APIs.
  *
  * @param id
  *   Unique identifier for the source account
  * @param accountId
  *   The account ID/number as used by the bank
  * @param bankId
  *   The bank ID/code
  * @param name
  *   User-defined name or alias for this account
  * @param currency
  *   ISO 4217 currency code (e.g., "CZK", "EUR", "USD")
  * @param active
  *   Whether this account is active for importing transactions
  * @param lastSyncTime
  *   Optional timestamp of the last successful sync
  *
  * Classification: Domain Entity
  */
case class SourceAccount(
    id: Long,
    accountId: String,
    bankId: String,
    name: String,
    currency: String,
    active: Boolean = true,
    lastSyncTime: Option[Instant] = None
)

/** Data class for creating new source accounts
  *
  * This class serves as the input for creating new accounts, without requiring an ID as it will be
  * generated by the repository.
  *
  * @param accountId
  *   The account ID/number as used by the bank
  * @param bankId
  *   The bank ID/code
  * @param name
  *   User-defined name or alias for this account
  * @param currency
  *   ISO 4217 currency code (e.g., "CZK", "EUR", "USD")
  * @param active
  *   Whether this account is active for importing transactions
  *
  * Classification: Domain Value Object (Command)
  */
case class CreateSourceAccount(
    accountId: String,
    bankId: String,
    name: String,
    currency: String,
    active: Boolean = true
) extends Create[SourceAccount]